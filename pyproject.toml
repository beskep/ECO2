[project]
name = "ECO2"
version = "0.6.0"
description = "효율등급인증 평가프로그램 ECO2, ECO2-OD 저장 파일 해석"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "cx-freeze>=8.0.0",
    "cyclopts>=3.11.1",
    "loguru>=0.7.3",
    "lxml>=5.3.1",
    "pythonnet>=3.0.5",
    "rich>=13.9.4",
]

[dependency-groups]
dev = [
    "mypy>=1.15.0",
    "pylint>=3.3.6",
    "pytest>=8.3.5",
    "pytest-cov>=6.0.0",
    "pytest-sugar>=1.0.0",
    "pytest-xdist>=3.7.0",
    "ruff>=0.11.2",
    "types-lxml>=2025.3.4",
    "typos>=1.30.3",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["eco2"]

[tool.ruff]
preview = true
respect-gitignore = false
output-format = "concise"

[tool.ruff.format]
quote-style = "single"
docstring-code-format = true

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "COM",  # flake8-commas
    "CPY",  # flake8-copyright
    "D100", # pydocstyle: undocumented-public-module
    "FIX",  # flake8-fixme
    "Q",    # flake8-quotes
    "S101", # flake8-bandit: assert
]
extend-safe-fixes = [
    "EM", # flake8-errmsg
    "PT", # flake8-pytest-style
    "TC", # flake8-type-checking
]

[tool.ruff.lint.extend-per-file-ignores]
"tests/**" = ["ANN", "D"]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]

[tool.pylint.messages_control]
confidence = ["HIGH", "CONTROL_FLOW", "INFERENCE"]
enable = ["bad-inline-option", "useless-suppression"]
disable = ["R", "C", "c-extension-no-member"]

[tool.mypy]
disable_error_code = ["import-untyped", "import", "var-annotated"]
check_untyped_defs = true
warn_unused_ignores = true
warn_unused_configs = true

[tool.pytest.ini_options]
addopts = ["-v", "--doctest-modules", "--cov=./", "--cov-report", "html"]

[tool.coverage.report]
exclude_also = [
    "if __name__ == .__main__.:",
    "if (typing\\.)?TYPE_CHECKING:",
    "except .*(\\n)?.*MiniLzo.*Error",
]
